<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:AvaloniaEdit="clr-namespace:AvaloniaEdit;assembly=AvaloniaEdit"
        xmlns:codePal="clr-namespace:CodePal"
        xmlns:tm="using:CodePal.TaskManager"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="CodePal.MainWindow"
        Title="Code Pal"
        Width="750"
        Height="350"
        Topmost="{Binding AlwaysOnTop}"
        Background="#282828"
        TransparencyLevelHint="Transparent"
        TransparencyBackgroundFallback="#282828"
        Opacity="{Binding WindowOpacity}"
        ExtendClientAreaToDecorationsHint="True"
        x:DataType="codePal:MainWindow">

	<Grid>
		<Grid.ShowGridLines>False</Grid.ShowGridLines>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="3*"/>
			<ColumnDefinition Width="5*"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="1*"></RowDefinition>
			<RowDefinition Height="10*"></RowDefinition>
			<RowDefinition Height="1*"></RowDefinition>
		</Grid.RowDefinitions>

		<Label
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontSize="12"
            FontWeight="SemiBold"
            Foreground="White"
            Content="Code Pal"/>


		<!-- START TASK LIST -->
		<!-- We give a name to the root grid in order to access it later -->
		<Grid
			Grid.Column="0"
			Grid.Row="1"
			Grid.RowSpan="2"
			RowDefinitions="Auto, *, Auto"
			x:Name="TaskListGrid">

			<!-- This is our title text block. We use Style.Classes to style it accordingly -->
			<TextBlock
				Grid.Column="0"
				Grid.Row="1"
				HorizontalAlignment="Center"
				Text="Tasks"
				FontSize="14"
				FontWeight="SemiBold"
				Foreground="White"/>

			<ScrollViewer Grid.Row="1">
				<!-- This ItemsControl show all added ToDoItems. -->
				<!-- It needs to be placed inside a ScrollViewer because other than a ListBox it has not its own -->
				<ItemsControl ItemsSource="{Binding #TaskListGrid.((tm:TaskManager)DataContext).TaskList}">
					<ItemsControl.ItemTemplate>
						<!-- The ItemTemplate defines how each item should be represented -->
						<!-- Our Item will be represented by a CheckBox and a Delete-Button -->
						<DataTemplate DataType="tm:TaskTracker">
							<Grid ColumnDefinitions="*, Auto">
								<CheckBox
									IsChecked="{Binding IsChecked}"
									Content="{Binding Content}"
									Margin="5,20,0,0"
									Foreground="White"/>

								<!-- Note how we use the Root-Grid to get the MainViewModel here. As we use compiled bindings we have to cast the DataContext -->
								<!-- The command parameter is the local ToDoItemViewModel being processed -->
								<Button Grid.Column="1"
										Command="{Binding #TaskListGrid.((tm:TaskManager)DataContext).RemoveItemCommand}"
										CommandParameter="{Binding .}"
										Margin="0,20,0,0">
									<PathIcon Data="{DynamicResource DeleteIconData}"
											  Height="15"
											  Foreground="Red" />
								</Button>
							</Grid>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</ScrollViewer>

			<!-- This TextBox can be used to add new ToDoItems -->
			<TextBox Grid.Row="2"
					 Text="{Binding #TaskListGrid.((tm:TaskManager)DataContext).NewItemContent}"
					 Watermark="Add a new Item"
					 Margin="5,5,0,5"
					 BorderThickness="0">
				<TextBox.InnerRightContent>
					<Button Command="{Binding #TaskListGrid.((tm:TaskManager)DataContext).AddItemCommand}">
						<PathIcon Data="{DynamicResource AcceptIconData}"
								  Foreground="Green" />
					</Button>
				</TextBox.InnerRightContent>
				<!-- KeyBindings allow us to define KeyGestures  -->
				<TextBox.KeyBindings>
					<KeyBinding Gesture="Enter" Command="{Binding #TaskListGrid.((tm:TaskManager)DataContext).AddItemCommand}" />
				</TextBox.KeyBindings>
			</TextBox>
		</Grid>
		<!-- END TASK LIST -->

		<!-- START CODE EDITOR -->
		<AvaloniaEdit:TextEditor
            Grid.Column="1"
            Grid.Row="1"
            Name="Editor"
            Text="Welcome to Code Pal!!"
            ShowLineNumbers="False"
            FontFamily="Cascadia Code,Consolas,Menlo,Monospace"
            Background="#1E1E1E"
            Margin="5"
		Foreground="White"/>
		<Label
            Grid.Column="1"
            Grid.Row="2"
            Name="WindowOpacityLabel"
            FontSize="10"
            Content="Window Opacity"
            HorizontalContentAlignment="Left"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Margin="10,0,0,0"
            Foreground="White"/>
		<ComboBox
            Grid.Column="1"
            Grid.Row="2"
            Name="OpacityComboBox"
            FontSize="10"
            HorizontalContentAlignment="Left"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Margin="100,5,0,5"
            BorderThickness="0"
            />

		<Label
            Grid.Column="1"
            Grid.Row="2"
            Content="Always On Top"
            Name="AlwaysOnTopLabel"
            FontSize="10"
            HorizontalContentAlignment="Left"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Margin="20,5,45,5"
            Foreground="White"/>
		<ToggleSwitch
            Grid.Column="1"
            Grid.Row="2"
            Name="ToggleAlwaysOnTop"
            FontSize="10"
            OnContent=""
            OffContent=""
            HorizontalContentAlignment="Left"
            HorizontalAlignment="Center"
            Margin="120,0,10,0"
            Foreground="White"/>

		<Label
            Grid.Column="1"
            Grid.Row="2"
            Content="Syntax Highlighting"
            Name="SyntaxHighlightingLabel"
            FontSize="10"
            HorizontalContentAlignment="Left"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Margin="10,5,60,5"
            Foreground="White"/>
		<ToggleSwitch
            Grid.Column="1"
            Grid.Row="2"
            Name="ToggleSyntaxHighlighting"
            FontSize="10"
            OnContent=""
            OffContent=""
            HorizontalContentAlignment="Left"
            HorizontalAlignment="Right"
            Margin="5,0,5,0"
            Foreground="White"/>
		<!-- END CODE EDITOR -->

	</Grid>

</Window>